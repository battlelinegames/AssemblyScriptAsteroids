var e=0,r={},t=!1,o=!1,a=!1,n=!1,l=!1;function i(){let m=0;0!==e&&(m=(new Date).getTime()-e),e=(new Date).getTime(),r.LoopCallback(m,t,o,a,n,l),requestAnimationFrame(i)}function m(e){var t={env:{memory:new WebAssembly.Memory({initial:100}),seed:Date.now}};!function(e){null==e.env.memory&&alert("You need to set memory in your importObject"),null==e.webgl&&(e.webgl={});const r=e.webgl;e.env.abort=(...e)=>{console.log("abort"),console.log(r.getString(e[0]))},e.webgl.WEBGL_READY=!1,e.webgl.memory=e.env.memory,e.webgl.contextArray=[],e.webgl.textureArray=[],e.webgl.programArray=[],e.webgl.shaderArray=[],e.webgl.bufferArray=[],e.webgl.frameBufferArray=[],e.webgl.renderBufferArray=[],e.webgl.uniformLocationArray=[],e.webgl.SIZE_OFFSET=-4,e.webgl.ID_OFFSET=-8,e.webgl.CHUNKSIZE=1024,e.webgl.STRING_ID=1,e.webgl.RTTI_BASE=0,e.webgl.VAL_ALIGN_OFFSET=6,e.ARRAYBUFFERVIEW_DATASTART_OFFSET=4,e.ARRAY_LENGTH_OFFSET=12,e.webgl.NONE=0,e.webgl.ARRAYBUFFERVIEW=1,e.webgl.ARRAY=2,e.webgl.STATICARRAY=4,e.webgl.SET=8,e.webgl.MAP=16,e.webgl.ACYCLIC=32,e.webgl.VALUE_ALIGN_0=64,e.webgl.VALUE_ALIGN_1=128,e.webgl.VALUE_ALIGN_2=256,e.webgl.VALUE_ALIGN_3=512,e.webgl.VALUE_ALIGN_4=1024,e.webgl.VALUE_SIGNED=2048,e.webgl.VALUE_FLOAT=4096,e.webgl.VALUE_NULLABLE=8192,e.webgl.VALUE_MANAGED=16384,e.webgl.KEY_ALIGN_0=32768,e.webgl.KEY_ALIGN_1=65536,e.webgl.KEY_ALIGN_2=131072,e.webgl.KEY_ALIGN_3=262144,e.webgl.KEY_ALIGN_4=524288,e.webgl.KEY_SIGNED=1048576,e.webgl.KEY_FLOAT=2097152,e.webgl.KEY_NULLABLE=4194304,e.webgl.KEY_MANAGED=8388608,e.webgl.getView=(e,t,o)=>{const a=r.memory.buffer;if(o)switch(e){case 2:return new Float32Array(a);case 3:return new Float64Array(a)}else switch(e){case 0:return new(t?Int8Array:Uint8Array)(a);case 1:return new(t?Int16Array:Uint16Array)(a);case 2:return new(t?Int32Array:Uint32Array)(a);case 3:return new(t?BigInt64Array:BigUint64Array)(a)}throw Error("unsupported align: "+e)},e.webgl.getArrayInfo=e=>{const t=r.getInfo(e);if(!(t&(ARRAYBUFFERVIEW|ARRAY|STATICARRAY)))throw Error(`not an array: ${e}, flags=${t}`);return t},e.webgl.getValueAlign=e=>31-Math.clz32(e>>>VAL_ALIGN_OFFSET&31),e.webgl.getArrayView=e=>{const t=new Uint32Array(r.memory.buffer),o=t[e+r.ID_OFFSET>>>2];if(o>=t[r.RTTI_BASE>>>2])throw Error("invalid id: "+o);const a=t[(r.RTTI_BASE+4>>>2)+2*o];if(!(a&(r.ARRAYBUFFERVIEW|r.ARRAY|r.STATICARRAY)))throw Error(`not an array: ${o}, flags=${a}`);const n=31-Math.clz32(a>>>r.VAL_ALIGN_OFFSET&31);let l=a&r.STATICARRAY?e:t[e+r.ARRAYBUFFERVIEW_DATASTART_OFFSET>>>2];const i=a&r.ARRAY?t[e+r.ARRAY_LENGTH_OFFSET>>>2]:t[l+r.SIZE_OFFSET>>>2]>>>n;return r.getView(n,a&r.VAL_SIGNED,a&r.VAL_FLOAT).subarray(l>>>=n,l+i)},e.webgl.getString=e=>{const t=r.memory.buffer,o=new Uint32Array(t),a=e/4-2,n=o[a];if(1!==n)throw Error(`not a string index=${e} id=${n}`);const l=o[a+1];return new TextDecoder("utf-16").decode(t.slice(e,e+l))},e.webgl.createContextFromCanvas=(e,t)=>{console.log(e),console.log(t),console.log("getting canvas id string"),console.log(r.getString(e));const o=document.getElementById(r.getString(e)).getContext(r.getString(t));let a=r.contextArray.findIndex(e=>null==e);return-1==a?(a=r.contextArray.length,r.contextArray.push(o)):r.contextArray[a]=o,a},e.webgl.getSupportedExtensions=e=>{alert("getSupportedExtensions is not currently supported")},e.webgl.getExtension=(e,t)=>{r.contextArray[e].getExtension(r.getString(name)),console.log("getExtension error"),console.error(err)},e.webgl.activeTexture=(e,t)=>{r.contextArray[e].activeTexture(r.textureArray[t]),console.log("activeTexture error"),console.error(err)},e.webgl.attachShader=(e,t,o)=>{r.contextArray[e].attachShader(r.programArray[t],r.shaderArray[o]),console.log("attachShader error"),console.error(err)},e.webgl.bindAttribLocation=(e,t,o,a)=>{r.contextArray[e].bindAttribLocation(r.programArray[t],o,r.getString(a)),console.log("bindAttribLocation error"),console.error(err)},e.webgl.bindBuffer=(e,t,o)=>{r.contextArray[e].bindBuffer(t,r.bufferArray[o]),console.log("bindBuffer error"),console.error(err)},e.webgl.bindFramebuffer=(e,t,o)=>{r.contextArray[e].bindFramebuffer(t,r.framebufferArray[o]),console.log("bindFramebuffer error"),console.error(err)},e.webgl.bindRenderbuffer=(e,t,o)=>{r.contextArray[e].bindRenderbuffer(t,r.renderbufferArray[o]),console.log("renderbufferArray error"),console.error(err)},e.webgl.bindTexture=(e,t,o)=>{r.contextArray[e].bindTexture(t,r.textureArray[o]),console.log("bindTexture error"),console.error(err)},e.webgl.blendColor=(e,t,o,a,n)=>{r.contextArray[e].blendColor(t,o,a,n),console.log("blendColor error"),console.error(err)},e.webgl.blendEquation=(e,t)=>{r.contextArray[e].blendEquation(t),console.log("blendEquation error"),console.error(err)},e.webgl.blendEquationSeparate=(e,t,o)=>{r.contextArray[e].blendEquationSeparate(t,o),console.log("blendEquationSeparate error"),console.error(err)},e.webgl.blendFunc=(e,t,o)=>{r.contextArray[e].blendFunc(t,o),console.log("blendFunc error"),console.error(err)},e.webgl.blendFuncSeparate=(e,t,o,a,n)=>{r.contextArray[e].blendFuncSeparate(t,o,a,n),console.log("blendFuncSeparate error"),console.error(err)};const t=(e,t,o,a)=>{r.contextArray[e].bufferData(t,r.getArrayView(o),a),console.log("bufferData error"),console.error(err)};e.webgl["bufferData<f32>"]=t,e.webgl["bufferData<f64>"]=t,e.webgl["bufferData<i32>"]=t,e.webgl.bufferSubData=(e,t,o,a,n)=>{r.contextArray[ctx].bufferSubData(e,t,r.getArrayView(o),a,n),console.log("bufferSubData error"),console.error(err)},e.webgl.checkFramebufferStatus=(e,t)=>r.contextArray[e].checkFramebufferStatus(t),e.webgl.clear=(e,t)=>{r.contextArray[e].clear(t),console.log("clear error"),console.error(err)},e.webgl.clearColor=(e,t,o,a,n)=>{r.contextArray[e].clearColor(t,o,a,n),console.log("clearColor error"),console.error(err)},e.webgl.clearDepth=(e,t)=>{r.contextArray[e].clearDepth(t),console.log("clearDepth error"),console.error(err)},e.webgl.clearStencil=(e,t)=>{r.contextArray[e].clearStencil(t),console.log("clearStencil error"),console.error(err)},e.webgl.colorMask=(e,t,o,a,n)=>{r.contextArray[e].colorMask(t,o,a,n),console.log("colorMask error"),console.error(err)},e.webgl.compileShader=(e,t)=>{r.contextArray[e].compileShader(r.shaderArray[t]),console.log("compileShader error"),console.error(err)},e.webgl.compressedTexImage2D=(e,t,o,a,n,l,i,m)=>{r.contextArray[e].compileShader(t,o,a,n,l,i,r.getArrayView(m)),console.log("compressedTexImage2D error"),console.error(err)},e.webgl.compressedTexSubImage2D=(e,t,o,a,n,l,i,m,g)=>{r.contextArray[e].compressedTexSubImage2D(t,a,n,l,i,m,r.getArrayView(g)),console.log("compressedTexSubImage2D error"),console.error(err)},e.webgl.copyTexImage2D=(e,t,o,a,n,l,i,m,g)=>{r.contextArray[e].copyTexImage2D(t,o,a,n,l,i,m,g),console.log("copyTexImage2D error"),console.error(err)},e.webgl.copyTexSubImage2D=(e,t,o,a,n,l,i,m,g)=>{r.contextArray[e].copyTexSubImage2D(t,o,a,n,l,i,m,g),console.log("copyTexSubImage2D error"),console.error(err)},e.webgl.createBuffer=e=>{let t=r.bufferArray.findIndex(e=>null==e),o=r.contextArray[e].createBuffer();return-1==t?(t=r.bufferArray.length,r.bufferArray.push(o)):r.bufferArray[t]=o,t},e.webgl.createFramebuffer=e=>{alert(arguments.callee.toString())},e.webgl.createProgram=e=>{let t=r.programArray.findIndex(e=>null==e),o=r.contextArray[e].createProgram();return-1==t?(t=r.programArray.length,r.programArray.push(o)):r.programArray[t]=o,t},e.webgl.createRenderbuffer=e=>{let t=r.renderBufferArray.findIndex(e=>null==e),o=r.contextArray[e].createRenderbuffer();return-1==t?(t=r.renderBufferArray.length,r.renderBufferArray.push(o)):r.renderBufferArray[t]=o,t},e.webgl.createShader=(e,t)=>{let o=r.shaderArray.findIndex(e=>null==e),a=r.contextArray[e].createShader(t);return-1==o?(o=r.shaderArray.length,r.shaderArray.push(a)):r.shaderArray[o]=a,o},e.webgl.createTexture=e=>{let t=r.shaderArray.findIndex(e=>null==e),o=r.contextArray[e].createTexture();return-1==t?(t=r.textureArray.length,r.textureArray.push(o)):r.textureArray[t]=o,t},e.webgl.cullFace=(e,t)=>{r.contextArray[e].cullFace(target,t),console.log("cullFace error"),console.error(err)},e.webgl.deleteBuffer=(e,t)=>{r.contextArray[e].deleteBuffer(this.bufferArray[t]),this.bufferArray[t]=null,console.log("deleteBuffer error"),console.error(err)},e.webgl.deleteFramebuffer=(e,t)=>{r.contextArray[e].deleteFramebuffer(this.framebufferArray[t]),this.framebufferArray[t]=null,console.log("deleteFramebuffer error"),console.error(err)},e.webgl.deleteRenderbuffer=(e,t)=>{r.contextArray[e].deleteRenderbuffer(this.renderBufferArray[t]),this.renderBufferArray[t]=null,console.log("deleteRenderbuffer error"),console.error(err)},e.webgl.deleteProgram=(e,t)=>{r.contextArray[e].deleteProgram(this.programArray[t]),this.program[t]=null,console.log("deleteProgram error"),console.error(err)},e.webgl.deleteShader=(e,t)=>{r.contextArray[e].deleteShader(this.shaderArray[t]),this.shaderArray[t]=null,console.log("deleteShader error"),console.error(err)},e.webgl.deleteTexture=(e,t)=>{r.contextArray[e].deleteShader(this.textureArray[t]),this.textureArray[t]=null,console.log("deleteTexture error"),console.error(err)},e.webgl.depthFunc=(e,t)=>{r.contextArray[e].depthFunc(t),console.log("depthFunc error"),console.error(err)},e.webgl.depthMask=(e,t)=>{r.contextArray[e].depthMask(t),console.log("depthMask error"),console.error(err)},e.webgl.depthRange=(e,t,o)=>{r.contextArray[e].depthRange(t,o),console.log("depthRange error"),console.error(err)},e.webgl.detachShader=(e,t,o)=>{r.contextArray[e].detachShader(t,o),console.log("detachShader error"),console.error(err)},e.webgl.disable=(e,t)=>{r.contextArray[e].disable(t),console.log("disable error"),console.error(err)},e.webgl.disableVertexAttribArray=(e,t)=>{r.contextArray[e].disableVertexAttribArray(t),console.log("disableVertexAttribArray error"),console.error(err)},e.webgl.drawArrays=(e,t,o,a)=>{r.contextArray[e].drawArrays(t,o,a),console.log("drawArrays error"),console.error(err)},e.webgl.drawElements=(e,t,o,a,n)=>{r.contextArray[e].drawElements(t,o,a,n),console.log("drawElements error"),console.error(err)},e.webgl.enable=(e,t)=>{r.contextArray[e].enable(t),console.log("enable error"),console.error(err)},e.webgl.enableVertexAttribArray=(e,t)=>{r.contextArray[e].enableVertexAttribArray(t),console.log("enableVertexAttribArray error"),console.error(err)},e.webgl.finish=e=>{r.contextArray[e].finish(),console.log("finish error"),console.error(err)},e.webgl.flush=e=>{r.contextArray[e].flush(),console.log("flush error"),console.error(err)},e.webgl.framebufferRenderbuffer=(e,t,o,a,n)=>{r.contextArray[e].framebufferRenderbuffer(t,o,a,n),console.log("framebufferRenderbuffer error"),console.error(err)},e.webgl.framebufferTexture2D=(e,t,o,a,n,l)=>{r.contextArray[e].framebufferTexture2D(t,o,a,n,l),console.log("framebufferTexture2D error"),console.error(err)},e.webgl.frontFace=(e,t)=>{r.contextArray[e].frontFace(t),console.log("frontFace error"),console.error(err)},e.webgl.generateMipmap=(e,t)=>{r.contextArray[e].generateMipmap(t),console.log("generateMipmap error"),console.error(err)},e.webgl.getActiveAttrib=(e,r,t)=>(alert("getActiveAttrib is not implemented"),0),e.webgl.getActiveUniform=(e,r,t)=>(alert("getActiveUniform is not implemented"),0),e.webgl.getAttachedShaders=(e,r)=>(alert("getAttachedShaders is not implemented"),0),e.webgl.getAttribLocation=(e,t,o)=>r.contextArray[e].getAttribLocation(r.programArray[t],r.getString(o)),e.webgl.getBufferParameter=(e,t,o)=>r.contextArray[e].getBufferParameter(t,o),e.webgl.getParameter=(e,t)=>r.contextArray[e].getParameter(t),e.webgl.getError=e=>r.contextArray[e].getError(),e.webgl.getFramebufferAttachmentParameter=(e,t,o,a)=>r.contextArray[e].getParameter(t,o,a),e.webgl.getProgramInfoLog=(e,r)=>(alert("getProgramInfoLog not implemented"),0),e.webgl.getRenderbufferParameter=(e,t,o)=>r.contextArray[e].getRenderbufferParameter(t,o),e.webgl.getShaderParameter=(e,r,t)=>(alert("getShaderParameter not implemented"),0),e.webgl.getShaderPrecisionFormat=(e,r,t)=>(alert("getShaderPrecisionFormat not implemented"),0),e.webgl.getShaderInfoLog=(e,r)=>(alert("getShaderInfoLog not implemented"),0),e.webgl.getShaderSource=(e,r)=>(alert("getShaderInfoLog not implemented"),0),e.webgl.getTexParameter=(e,r,t)=>(alert("getTexParameter not implemented"),0),e.webgl.getUniform=(e,r,t)=>(alert("getUniform not implemented"),0),e.webgl.getUniformLocation=(e,t,o)=>{let a=r.uniformLocationArray.findIndex(e=>null==e),n=r.contextArray[e].getUniformLocation(r.programArray[t],r.getString(o));return-1==a?(a=r.uniformLocationArray.length,r.uniformLocationArray.push(n)):r.uniformLocationArray[a]=n,a},e.webgl.getVertexAttrib=(e,r,t)=>(alert("getVertexAttrib not implemented"),0),e.webgl.getVertexAttribOffset=(e,t,o)=>r.contextArray[e].getVertexAttribOffset(t,o),e.webgl.hint=(e,t,o)=>r.contextArray[e].hint(t,o),e.webgl.isBuffer=(e,t)=>r.contextArray[e].isBuffer(r.bufferArray[t]),e.webgl.isEnabled=(e,t)=>r.contextArray[e].isEnabled(t),e.webgl.isFramebuffer=(e,t)=>r.contextArray[e].isFramebuffer(r.frameBufferArray[t]),e.webgl.isProgram=(e,t)=>r.contextArray[e].isProgram(r.programArray[t]),e.webgl.isRenderbuffer=(e,t)=>r.contextArray[e].isRenderbuffer(r.renderBufferArray[t]),e.webgl.isShader=(e,t)=>r.contextArray[e].isShader(r.shaderArray[t]),e.webgl.isTexture=(e,t)=>r.contextArray[e].isTexture(r.textureArray[t]),e.webgl.lineWidth=(e,t)=>r.contextArray[e].lineWidth(t),e.webgl.linkProgram=(e,t)=>{r.contextArray[e].linkProgram(r.programArray[t]),r.contextArray[e].getProgramParameter(r.programArray[t],r.contextArray[e].LINK_STATUS)||console.log(arg[0].getProgramInfoLog(r.programArray[t])),console.log("linkProgram error"),console.error(err)},e.webgl.pixelStorei=(e,t,o)=>{r.contextArray[e].pixelStorei(t,o),console.log("pixelStorei error"),console.error(err)},e.webgl.polygonOffset=(e,t,o)=>{r.contextArray[e].polygonOffset(t,o),console.log("polygonOffset error"),console.error(err)},e.webgl.readPixels=(e,r,t,o,a,n,l,i)=>{alert("readPixels not implemented")},e.webgl.renderbufferStorage=(e,t,o,a,n)=>{r.contextArray[e].renderbufferStorage(t,o,a,n),console.log("renderbufferStorage error"),console.error(err)},e.webgl.sampleCoverage=(e,t,o)=>{r.contextArray[e].sampleCoverage(t,o),console.log("sampleCoverage error"),console.error(err)},e.webgl.scissor=(e,t,o,a,n)=>{r.contextArray[e].scissor(t,o,a,n),console.log("scissor error"),console.error(err)},e.webgl.shaderSource=(e,t,o)=>{r.contextArray[e].shaderSource(r.shaderArray[t],r.getString(o)),console.log("shaderSource error"),console.error(err)},e.webgl.stencilFunc=(e,t,o,a)=>{r.contextArray[e].stencilFunc(t,o,a),console.log("stencilFunc error"),console.error(err)},e.webgl.stencilFuncSeparate=(e,t,o,a,n)=>{r.contextArray[e].stencilFuncSeparate(t,o,a,n),console.log("stencilFuncSeparate error"),console.error(err)},e.webgl.stencilMask=(e,t)=>{r.contextArray[e].stencilMask(t),console.log("stencilMask error"),console.error(err)},e.webgl.stencilMaskSeparate=(e,t,o)=>{r.contextArray[e].stencilMaskSeparate(t,o),console.log("stencilMaskSeparate error"),console.error(err)},e.webgl.stencilOp=(e,r,t,o)=>{alert("stencilOp is not implemented")},e.webgl.stencilOpSeparate=(e,r,t,o,a)=>{alert("stencilOpSeparate is not implemented")},e.webgl.texImage2D=(e,t,o,a,n,l,i,m,g,c)=>{r.contextArray[e].texImage2D(t,o,a,n,l,i,m,g,r.getArrayView(c)),console.log("texImage2D error"),console.error(err)},e.webgl.texParameterf=(e,t,o,a)=>{r.contextArray[e].texParameterf(t,o,a),console.log("texParameterf error"),console.error(err)},e.webgl.texParameteri=(e,t,o,a)=>{r.contextArray[e].texParameteri(t,o,a),console.log("texParameteri error"),console.error(err)},e.webgl.texSubImage2D=(e,t,o,a,n,l,i,m,g,c)=>{r.contextArray[e].texSubImage2D(t,o,a,n,l,i,m,g,r.getArrayView(c)),console.log("texSubImage2D error"),console.error(err)},e.webgl.uniform1f=(e,t,o)=>r.contextArray[e].uniform1f(r.uniformLocationArray[t],o),e.webgl.uniform1fv=(e,t,o)=>r.contextArray[e].uniform1fv(r.uniformLocationArray[t],r.getArrayView(o)),e.webgl.uniform1i=(e,t,o)=>r.contextArray[e].uniform1i(r.uniformLocationArray[t],o),e.webgl.uniform1iv=(e,t,o)=>r.contextArray[e].uniform1iv(r.uniformLocationArray[t],r.getArrayView(o)),e.webgl.uniform2f=(e,t,o,a)=>r.contextArray[e].uniform2f(r.uniformLocationArray[t],o,a),e.webgl.uniform2fv=(e,t,o)=>r.contextArray[e].uniform2fv(r.uniformLocationArray[t],r.getArrayView(o)),e.webgl.uniform2i=(e,t,o,a)=>r.contextArray[e].uniform2i(r.uniformLocationArray[t],o,a),e.webgl.uniform2iv=(e,t,o)=>r.contextArray[e].uniform2iv(r.uniformLocationArray[t],r.getArrayView(o)),e.webgl.uniform3f=(e,t,o,a,n)=>r.contextArray[e].uniform3f(r.uniformLocationArray[t],o,a,n),e.webgl.uniform3fv=(e,t,o)=>r.contextArray[e].uniform3fv(r.uniformLocationArray[t],r.getArrayView(o)),e.webgl.uniform3i=(e,t,o,a,n)=>r.contextArray[e].uniform3i(r.uniformLocationArray[t],o,a,n),e.webgl.uniform3iv=(e,t,o)=>r.contextArray[e].uniform3iv(r.uniformLocationArray[t],r.getArrayView(o)),e.webgl.uniform4f=(e,t,o,a,n,l)=>r.contextArray[e].uniform4f(r.uniformLocationArray[t],o,a,n,l),e.webgl.uniform4fv=(e,t,o)=>r.contextArray[e].uniform4fv(r.uniformLocationArray[t],r.getArrayView(o)),e.webgl.uniform4i=(e,t,o,a,n,l)=>r.contextArray[e].uniform4i(r.uniformLocationArray[t],o,a,n,l),e.webgl.uniform4iv=(e,t,o)=>r.contextArray[e].uniform4iv(r.uniformLocationArray[t],r.getArrayView(o)),e.webgl.uniformMatrix2fv=(e,t,o,a)=>r.contextArray[e].uniformMatrix2fv(r.uniformLocationArray[t],o,r.getArrayView(a)),e.webgl.uniformMatrix3fv=(e,t,o,a)=>r.contextArray[e].uniformMatrix3fv(r.uniformLocationArray[t],o,r.getArrayView(a)),e.webgl.uniformMatrix4fv=(e,t,o,a)=>r.contextArray[e].uniformMatrix4fv(r.uniformLocationArray[t],o,r.getArrayView(a)),e.webgl.useProgram=(e,t)=>{r.contextArray[e].useProgram(r.programArray[t]),console.log("useProgram error"),console.error(err)},e.webgl.validateProgram=(e,t)=>{r.contextArray[e].validateProgram(r.programArray[t]),console.log("validateProgram error"),console.error(err)},e.webgl.vertexAttrib1f=(e,t,o)=>r.contextArray[e].vertexAttrib1f(t,o),e.webgl.vertexAttrib1fv=(e,t,o)=>r.contextArray[e].vertexAttrib1fv(t,r.getArrayView(o)),e.webgl.vertexAttrib2f=(e,t,o,a)=>r.contextArray[e].vertexAttrib2f(t,o,a),e.webgl.vertexAttrib2fv=(e,t,o)=>r.contextArray[e].vertexAttrib2fv(t,r.getArrayView(o)),e.webgl.vertexAttrib3f=(e,t,o,a,n)=>r.contextArray[e].vertexAttrib3f(t,o,a,n),e.webgl.vertexAttrib3fv=(e,t,o)=>r.contextArray[e].vertexAttrib3fv(t,r.getArrayView(o)),e.webgl.vertexAttrib4f=(e,t,o,a,n,l)=>r.contextArray[e].vertexAttrib4f(t,o,a,n,l),e.webgl.vertexAttrib4fv=(e,t,o)=>r.contextArray[e].vertexAttrib4fv(t,r.getArrayView(o)),e.webgl.vertexAttribPointer=(e,t,o,a,n,l,i)=>{r.contextArray[e].vertexAttribPointer(t,o,a,n,l,i),console.log("vertexAttrib4fv error"),console.error(err)},e.webgl.viewport=(e,t,o,a,n,l)=>{r.contextArray[e].viewport(t,o,a,n,l),console.log("viewport error"),console.error(err)},e.webgl.copyBufferSubData=(e,r,t,o,a,n)=>{alert("copyBufferSubData not implemented (expiramental)")},e.webgl.getBufferSubData=(e,r,t,o,a,n)=>{alert("getBufferSubData not implemented (expiramental)")},e.webgl.blitFramebuffer=(e,r,t,o,a,n,l,i,m,g,c)=>{alert("blitFramebuffer not implemented (expiramental)")},e.webgl.framebufferTextureLayer=(e,r,t,o,a,n)=>{alert("framebufferTextureLayer not implemented (expiramental)")},e.webgl.invalidateFramebuffer=(e,r,t)=>{alert("invalidateFramebuffer not implemented (expiramental)")},e.webgl.invalidateSubFramebuffer=(e,r,t,o,a,n,l)=>{alert("invalidateSubFramebuffer not implemented (expiramental)")},e.webgl.readBuffer=(e,r)=>{alert("readBuffer not implemented (expiramental)")},e.webgl.getInternalformatParameter=(e,r,t,o)=>{alert("getInternalformatParameter not implemented (expiramental)")},e.webgl.renderbufferStorageMultisample=(e,r,t,o,a,n)=>{alert("renderbufferStorageMultisample not implemented (expiramental)")},e.webgl.texStorage2D=(e,r,t,o,a,n)=>{alert("texStorage2D not implemented (expiramental)")},e.webgl.texStorage3D=(e,r,t,o,a,n,l)=>{alert("texStorage3D not implemented (expiramental)")},e.webgl.texSubImage3D=(e,r,t,o,a,n,l,i,m,g,c,b)=>{alert("texSubImage3D not implemented (expiramental)")},e.webgl.copyTexSubImage3D=(e,r,t,o,a,n,l,i,m,g)=>{alert("copyTexSubImage3D not implemented (expiramental)")},e.webgl.compressedTexImage3D=(e,r,t,o,a,n,l,i,m,g)=>{alert("compressedTexImage3D not implemented (expiramental)")},e.webgl.compressedTexSubImage3D=(e,r,t,o,a,n,l,i,m,g,c,b)=>{alert("compressedTexSubImage3D not implemented (expiramental)")},e.webgl.getFragDataLocation=(e,r,t)=>{alert("getFragDataLocation not implemented (expiramental)")},e.webgl.uniform1ui=(e,r,t)=>{alert("uniform1ui not implemented (expiramental)")},e.webgl.uniform2ui=(e,r,t,o)=>{alert("uniform2ui not implemented (expiramental)")},e.webgl.uniform3ui=(e,r,t,o,a)=>{alert("uniform3ui not implemented (expiramental)")},e.webgl.uniform4ui=(e,r,t,o,a,n)=>{alert("uniform4ui not implemented (expiramental)")},e.webgl.uniform1uiv=(e,r,t,o,a)=>{alert("uniform1uiv not implemented (expiramental)")},e.webgl.uniform2uiv=(e,r,t,o,a)=>{alert("uniform2uiv not implemented (expiramental)")},e.webgl.uniform3uiv=(e,r,t,o,a)=>{alert("uniform3uiv not implemented (expiramental)")},e.webgl.uniform4uiv=(e,r,t,o,a)=>{alert("uniform4uiv not implemented (expiramental)")},e.webgl.uniformMatrix3x2fv=(e,r,t,o,a,n)=>{alert("uniformMatrix3x2fv not implemented (expiramental)")},e.webgl.uniformMatrix4x2fv=(e,r,t,o,a,n)=>{alert("uniformMatrix4x2fv not implemented (expiramental)")},e.webgl.uniformMatrix2x3fv=(e,r,t,o,a,n)=>{alert("uniformMatrix2x3fv not implemented (expiramental)")},e.webgl.uniformMatrix4x3fv=(e,r,t,o,a,n)=>{alert("uniformMatrix4x3fv not implemented (expiramental)")},e.webgl.uniformMatrix2x4fv=(e,r,t,o,a,n)=>{alert("uniformMatrix2x4fv not implemented (expiramental)")},e.webgl.uniformMatrix3x4fv=(e,r,t,o,a,n)=>{alert("uniformMatrix3x4fv not implemented (expiramental)")},e.webgl.vertexAttribI4i=(e,r,t,o,a,n)=>{alert("vertexAttribI4i not implemented (expiramental)")},e.webgl.vertexAttribI4iv=(e,r,t)=>{alert("vertexAttribI4iv not implemented (expiramental)")},e.webgl.vertexAttribI4ui=(e,r,t,o,a,n)=>{alert("vertexAttribI4ui not implemented (expiramental)")},e.webgl.vertexAttribI4uiv=(e,r,t)=>{alert("vertexAttribI4uiv not implemented (expiramental)")},e.webgl.vertexAttribIPointer=(e,r,t,o,a,n)=>{alert("vertexAttribIPointer not implemented (expiramental)")},e.webgl.vertexAttribDivisor=(e,r,t)=>{alert("vertexAttribIPointer not implemented (expiramental)")},e.webgl.drawArraysInstanced=(e,r,t,o,a)=>{alert("drawArraysInstanced not implemented (expiramental)")},e.webgl.drawElementsInstanced=(e,r,t,o,a,n)=>{alert("drawElementsInstanced not implemented (expiramental)")},e.webgl.drawRangeElements=(e,r,t,o,a,n,l)=>{alert("drawRangeElements not implemented (expiramental)")},e.webgl.drawBuffers=(e,r)=>{alert("drawBuffers not implemented (expiramental)")},e.webgl.clearBufferfv=(e,r,t,o,a)=>{alert("clearBufferfv not implemented (expiramental)")},e.webgl.clearBufferiv=(e,r,t,o,a)=>{alert("clearBufferiv not implemented (expiramental)")},e.webgl.clearBufferuiv=(e,r,t,o,a)=>{alert("clearBufferuiv not implemented (expiramental)")},e.webgl.clearBufferfi=(e,r,t,o,a)=>{alert("clearBufferfi not implemented (expiramental)")},e.webgl.createQuery=e=>{alert("createQuery not implemented (expiramental)")},e.webgl.deleteQuery=(e,r)=>{alert("deleteQuery not implemented (expiramental)")},e.webgl.isQuery=(e,r)=>{alert("isQuery not implemented (expiramental)")},e.webgl.beginQuery=(e,r,t)=>{alert("beginQuery not implemented (expiramental)")},e.webgl.endQuery=(e,r)=>{alert("endQuery not implemented (expiramental)")},e.webgl.getQuery=(e,r,t)=>{alert("getQuery not implemented (expiramental)")},e.webgl.getQueryParameter=(e,r,t)=>{alert("getQueryParameter not implemented (expiramental)")},e.webgl.createSampler=e=>{alert("createSampler not implemented (expiramental)")},e.webgl.deleteSampler=(e,r)=>{alert("deleteSampler not implemented (expiramental)")},e.webgl.isSampler=(e,r)=>{alert("isSampler not implemented (expiramental)")},e.webgl.bindSampler=(e,r,t)=>{alert("bindSampler not implemented (expiramental)")},e.webgl.samplerParameteri=(e,r,t,o)=>{alert("samplerParameteri not implemented (expiramental)")},e.webgl.samplerParameterf=(e,r,t,o)=>{alert("samplerParameterf not implemented (expiramental)")},e.webgl.getSamplerParameter=(e,r,t)=>{alert("getSamplerParameter not implemented (expiramental)")},e.webgl.fenceSync=(e,r,t)=>{alert("fenceSync not implemented (expiramental)")},e.webgl.isSync=(e,r)=>{alert("isSync not implemented (expiramental)")},e.webgl.deleteSync=(e,r)=>{alert("deleteSync not implemented (expiramental)")},e.webgl.clientWaitSync=(e,r,t,o)=>{alert("clientWaitSync not implemented (expiramental)")},e.webgl.waitSync=(e,r,t,o)=>{alert("waitSync not implemented (expiramental)")},e.webgl.getSyncParameter=(e,r,t)=>{alert("getSyncParameter not implemented (expiramental)")},e.webgl.createTransformFeedback=e=>{alert("createTransformFeedback not implemented (expiramental)")},e.webgl.deleteTransformFeedback=(e,r)=>{alert("deleteTransformFeedback not implemented (expiramental)")},e.webgl.isTransformFeedback=(e,r)=>{alert("isTransformFeedback not implemented (expiramental)")},e.webgl.bindTransformFeedback=(e,r,t)=>{alert("bindTransformFeedback not implemented (expiramental)")},e.webgl.beginTransformFeedback=(e,r)=>{alert("beginTransformFeedback not implemented (expiramental)")},e.webgl.endTransformFeedback=e=>{alert("endTransformFeedback not implemented (expiramental)")},e.webgl.transformFeedbackVaryings=(e,r,t,o)=>{alert("transformFeedbackVaryings not implemented (expiramental)")},e.webgl.getTransformFeedbackVarying=(e,r,t)=>{alert("getTransformFeedbackVarying not implemented (expiramental)")},e.webgl.pauseTransformFeedback=e=>{alert("pauseTransformFeedback not implemented (expiramental)")},e.webgl.resumeTransformFeedback=e=>{alert("resumeTransformFeedback not implemented (expiramental)")},e.webgl.bindBufferBase=(e,r,t,o)=>{alert("bindBufferBase not implemented (expiramental)")},e.webgl.bindBufferRange=(e,r,t,o,a,n)=>{alert("bindBufferRange not implemented (expiramental)")},e.webgl.getIndexedParameter=(e,r,t)=>{alert("getIndexedParameter not implemented (expiramental)")},e.webgl.getUniformIndices=(e,r,t)=>{alert("getUniformIndices not implemented (expiramental)")},e.webgl.getActiveUniforms=(e,r,t,o)=>{alert("getActiveUniforms not implemented (expiramental)")},e.webgl.getUniformBlockIndex=(e,r,t)=>{alert("getUniformBlockIndex not implemented (expiramental)")},e.webgl.getActiveUniformBlockParameter=(e,r,t,o)=>{alert("getActiveUniformBlockParameter not implemented (expiramental)")},e.webgl.getActiveUniformBlockName=(e,r,t)=>{alert("getActiveUniformBlockName not implemented (expiramental)")},e.webgl.uniformBlockBinding=(e,r,t,o)=>{alert("uniformBlockBinding not implemented (expiramental)")},e.webgl.createVertexArray=e=>{alert("createVertexArray not implemented (expiramental)")},e.webgl.deleteVertexArray=(e,r)=>{alert("deleteVertexArray not implemented (expiramental)")},e.webgl.isVertexArray=(e,r)=>{alert("isVertexArray not implemented (expiramental)")},e.webgl.bindVertexArray=(e,r)=>{alert("bindVertexArray not implemented (expiramental)")}}(t,r),(async()=>{let o=await WebAssembly.instantiateStreaming(fetch(e),t);r=o.instance.exports,function(e,r){null!=e?null!=e?(r.webgl.WEBGL_READY=!0,r.webgl.RTTI_BASE=e.instance.exports.__rtti_base):console.error("ASWebGLReady requires import object as 2nd parameter"):console.error("ASWebGLReady requires the WebAssembly Instance as 1st parameter")}(o,t),r.StartGame(),requestAnimationFrame(i)})()}document.addEventListener("keydown",e=>{"ArrowLeft"==e.code&&(t=!0),"ArrowUp"==e.code&&(a=!0),"ArrowRight"==e.code&&(o=!0),"ArrowDown"==e.code&&(n=!0),"Space"==e.code&&(l=!0)}),document.addEventListener("keyup",e=>{"ArrowLeft"==e.code&&(t=!1),"ArrowUp"==e.code&&(a=!1),"ArrowRight"==e.code&&(o=!1),"ArrowDown"==e.code&&(n=!1),"Space"==e.code&&(l=!1)});export{m as startGame};