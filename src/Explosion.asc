import {Vector} from './Vector';
import {Renderer} from './Renderer';


export class Explosion {
  public static FRAME_TIME: f32 = 0.3;
  public frameTimeRemaining: f32 = 0.15;
  // PRE SCALE THIS
  public exp1Loop: StaticArray<f32> = [0,0.2,
                                      -0.1,0,
                                      0,-0.2,
                                      0.1,0,];
  public exp2Loop: StaticArray<f32> = [0,0.3,-0.1,0.1,-0.3,0,-0.1,-0.1,0,-0.3,0.1,-0.1,0.3,0,0.1,0.1,];
  public exp3Loop: StaticArray<f32> = [0.3,0.3,0,0.2,-0.3,0.3,-0.2,0,-0.3,-0.3,0,-0.2,0.3,-0.3,0.2,0,];
  public exp4Loop: StaticArray<f32> = [0.6,0.6,0.1,0.3,0,0.8,-0.1,0.3,-0.6,0.6,-0.3,0.1,-0.8,0,-0.3,-0.1,
                                      -0.6,-0.6,-0.1,-0.3,0,-0.8,0.1,-0.3,0.6,-0.6,0.3,-0.1,0.8,0,0.3,0.1,];

  public velocity: Vector = new Vector(0.0, 0.0);

  // i may need a get / set for these
  public position: Vector = new Vector(0.0, 0.0);
  public visible: bool = false;
  public player: bool = true;
  public currentFrame: i32 = 0;
  public rotation: f32 = 0.0;
  public scale: f32 = 0.2;

  constructor() {
    this.visible = false;
  }

  public move(): void {
    if( this.visible == true ) {
      this.frameTimeRemaining -= Renderer.DELTA;
      if( this.frameTimeRemaining < 0 ) {
        this.currentFrame++;
        if( this.currentFrame >= 4 ) {
          this.visible = false;
        }
      }
      this.rotation += 0.05;
      //this.scale += 0.005;
    }
  }

  public draw(): void {
    if( this.visible == true ) {
      if( this.currentFrame == 0 ) {
        this.rotation += 0.05;
        this.scale += 0.002;
        Renderer.SN.renderLineLoop(this.exp1Loop, this.position, this.rotation, this.scale, [1.0, 0.0, 0.0, 1.0] );
      }
      else if( this.currentFrame == 1 ) {
        Renderer.SN.renderLineLoop(this.exp2Loop, this.position, this.rotation, this.scale, [1.0, 0.0, 0.0, 1.0] );
      }
      else if( this.currentFrame == 2 ) {
        Renderer.SN.renderLineLoop(this.exp1Loop, this.position, this.rotation, this.scale, [1.0, 1.0, 0.0, 1.0] );
        Renderer.SN.renderLineLoop(this.exp3Loop, this.position, this.rotation, this.scale, [1.0, 0.0, 0.0, 1.0] );
      }
      else if( this.currentFrame == 3 ) {
        Renderer.SN.renderLineLoop(this.exp2Loop, this.position, this.rotation, this.scale, [1.0, 1.0, 0.0, 1.0] );
        Renderer.SN.renderLineLoop(this.exp4Loop, this.position, this.rotation, this.scale, [1.0, 0.0, 0.0, 1.0] );
      }
    }
  }

  public activate( x:f32, y:f32 ): void {
    this.position.x = x;
    this.position.y = y;
    this.scale = 0.2;
    this.visible = true;
    this.currentFrame = 0;
    this.frameTimeRemaining = Explosion.FRAME_TIME / 2;
  }
}

/*


      var ship_loop_color:usize=memory.data<i32>([
                    0xff_40_40_40, // default layer color
                    0xff_40_40_40, // exp2 layer color
                    0xff_40_40_40, // exp3 layer color
                    0xff_ff_ff_ff, // exp4 layer color
      ]);
      
      var ship_loop_info:usize=memory.data<i32>([ 4, // number of loops
                    8, // default layer loop size
                    16, // exp2 layer loop size
                    16, // exp3 layer loop size
                    32, // exp4 layer loop size
      ]);
      
      var default_layer:usize=memory.data<f32>([0,0.1,-0.1,0,0,-0.1,0.1,0,]);


      var exp2_layer:usize=memory.data<f32>([0,0.3,-0.1,0.1,-0.3,0,-0.1,-0.1,0,-0.3,0.1,-0.1,0.3,0,0.1,0.1,]);


      var exp3_layer:usize=memory.data<f32>([0.3,0.3,0,0.2,-0.3,0.3,-0.2,0,-0.3,-0.3,0,-0.2,0.3,-0.3,0.2,0,]);


      var exp4_layer:usize=memory.data<f32>([0.6,0.6,0.1,0.3,0,0.8,-0.1,0.3,-0.6,0.6,-0.3,0.1,-0.8,0,-0.3,-0.1,-0.6,-0.6,-0.1,-0.3,0,-0.8,0.1,-0.3,0.6,-0.6,0.3,-0.1,0.8,0,0.3,0.1,]);


*/